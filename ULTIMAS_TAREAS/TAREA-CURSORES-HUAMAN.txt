/*=============================================
EJERCICIO 01
===========================================
Desarrollar una procedimiento que retorne
un cursor con los siguientes datos:
(EUREKA)
CODIGO      NOMBRE      SALDO     SALDO
SUCURSAL    SUCURSAL    SOLES     DOLARES
*/
----------------------------------------------
CREATE OR REPLACE PROCEDURE EUREKA.P1
IS
CURSOR cursor_1 IS
SELECT DISTINCT S.CHR_SUCUCODIGO,S.VCH_SUCUNOMBRE,SUM(CASE WHEN C.CHR_MONECODIGO='01' THEN C.DEC_CUENSALDO ELSE 0 END) "SALDO SOLES",
SUM(CASE WHEN C.CHR_MONECODIGO='02' THEN C.DEC_CUENSALDO ELSE 0 END) "SALDO DOLARES"
FROM EUREKA.SUCURSAL S
INNER JOIN EUREKA.CUENTA C ON C.CHR_SUCUCODIGO=S.CHR_SUCUCODIGO
INNER JOIN EUREKA.MONEDA M ON M.CHR_MONECODIGO=C.CHR_MONECODIGO
GROUP BY S.CHR_SUCUCODIGO,S.VCH_SUCUNOMBRE
ORDER BY 1;
COD VARCHAR2(3);
NOM VARCHAR2(50);
SOL VARCHAR2(50);
DOL VARCHAR2(50);
BEGIN
 OPEN CURSOR_1;
 FETCH CURSOR_1 INTO COD, NOM,SOL,DOL;
 WHILE CURSOR_1 % FOUND LOOP
 dbms_output.put_line(COD||' - '||NOM||' - '||SOL||' - '||DOL);
 FETCH CURSOR_1 INTO COD, NOM,SOL,DOL;
 END LOOP;
 CLOSE CURSOR_1;
END;
/
------------------------------------------------
--COMPROBANDO EJERCICIO:
CALL EUREKA.P1();
/*
=============================================
EJERCICIO 02
=============================================
Desarrollar un procedimiento que retorne 
el siguiente reporte:

CODIGO    NOMBRE      CANT.MOV.  CANT.MOV.
EMPLEADO  EMPLEADO    SOLES      DOLARES
------------------------------------------------
*/
CREATE OR REPLACE PROCEDURE EUREKA.P2
IS
CURSOR CURSOR_2 IS
 SELECT DISTINCT E.CHR_EMPLCODIGO,E.VCH_EMPLPATERNO||' '||E.VCH_EMPLMATERNO||' , '||E.VCH_EMPLNOMBRE NOMBRE,
 SUM(CASE WHEN C.CHR_MONECODIGO='01' THEN 1 ELSE 0 END) "CANT. MOV SOLES",
 SUM(CASE WHEN C.CHR_MONECODIGO='02' THEN 1 ELSE 0 END) "CANT. MOV DOLARES"
 FROM EUREKA.EMPLEADO E
 INNER JOIN EUREKA.MOVIMIENTO MV ON MV.CHR_EMPLCODIGO=E.CHR_EMPLCODIGO
 INNER JOIN EUREKA.CUENTA C ON C.CHR_CUENCODIGO=MV.CHR_CUENCODIGO
 GROUP BY E.CHR_EMPLCODIGO,E.VCH_EMPLPATERNO||' '||E.VCH_EMPLMATERNO||' , '||E.VCH_EMPLNOMBRE
 ORDER BY 1;
 COD EUREKA.EMPLEADO.CHR_EMPLCODIGO%TYPE;
 NOM VARCHAR2(100);
 CANS EUREKA.CUENTA.CHR_MONECODIGO%TYPE;
 CAND EUREKA.CUENTA.CHR_MONECODIGO%TYPE;
BEGIN 
  OPEN CURSOR_2;
  FETCH CURSOR_2 INTO COD, NOM,CANS,CAND;
  WHILE CURSOR_2 % FOUND LOOP
  dbms_output.put_line(COD||' - '||NOM||' - '||CANS||' - '||CAND);
  FETCH CURSOR_2 INTO COD, NOM,CANS,CAND;
  END LOOP;
  CLOSE CURSOR_2;
END;
/
-------------------------------------------------
CALL EUREKA.P2();

/*
=============================================
EJERCICIO 03
=============================================
Desarrollar un procedimiento que retorne 
el siguiente reporte:
EUREKA
CODIGO      NOMBRE                CANT.       
SUCURSAL    SUCURSAL    MONEDA    MOVIMIENTO  IMPORTE
---------------------------------------------------------
*/
CREATE OR REPLACE PROCEDURE EUREKA.P3
IS
CURSOR CURSOR_3 IS
SELECT DISTINCT S.CHR_SUCUCODIGO CODIGO,S.VCH_SUCUNOMBRE NOMBRE,M.VCH_MONEDESCRIPCION MONEDA,COUNT(C.CHR_CUENCODIGO) "CANT. MOVIENTOS",
 SUM(MV.DEC_MOVIIMPORTE) IMPORTE
FROM EUREKA.SUCURSAL S
INNER JOIN EUREKA.CUENTA C ON C.CHR_SUCUCODIGO=S.CHR_SUCUCODIGO
INNER JOIN EUREKA.MONEDA M ON M.CHR_MONECODIGO=C.CHR_MONECODIGO
INNER JOIN EUREKA.MOVIMIENTO MV ON MV.CHR_CUENCODIGO=C.CHR_CUENCODIGO
GROUP BY S.CHR_SUCUCODIGO,S.VCH_SUCUNOMBRE,M.VCH_MONEDESCRIPCION
ORDER BY 1;
COD EUREKA.SUCURSAL.CHR_SUCUCODIGO%TYPe;
NOM EUREKA.SUCURSAL.VCH_SUCUNOMBRE%TYPe;
MONE EUREKA.MONEDA.VCH_MONEDESCRIPCION%TYPE;
CMOV EUREKA.MOVIMIENTO.CHR_CUENCODIGO%TYPE;
IMP EUREKA.MOVIMIENTO.DEC_MOVIIMPORTE%TYPE;
BEGIN
 OPEN CURSOR_3;
 FETCH CURSOR_3 INTO COD, NOM,MONE,CMOV,IMP;
 WHILE CURSOR_3 % FOUND LOOP
 dbms_output.put_line(COD||' - '||NOM||' - '||MONE||' - '||CMOV||' - '||IMP);
 FETCH CURSOR_3 INTO COD, NOM,MONE,CMOV,IMP;
 END LOOP;
 CLOSE CURSOR_3;
END;
-----------------------------------------------------------
--COMROBANDO:
CALL EUREKA.P3();
